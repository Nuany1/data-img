{
	"ID": "20230107153121-fed5d9c",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230107153121-fed5d9c",
		"scroll": "{\u0026amp;quot;startId\u0026amp;quot;:\u0026amp;quot;20230107153129-353mf31\u0026amp;quot;,\u0026amp;quot;endId\u0026amp;quot;:\u0026amp;quot;20230107155102-8vza7nx\u0026amp;quot;,\u0026amp;quot;scrollTop\u0026amp;quot;:0,\u0026amp;quot;focusId\u0026amp;quot;:\u0026amp;quot;20230107153129-n2p9hml\u0026amp;quot;,\u0026amp;quot;focusStart\u0026amp;quot;:78,\u0026amp;quot;focusEnd\u0026amp;quot;:78}",
		"title": "基本概念",
		"updated": "20230107155144"
	},
	"Children": [
		{
			"ID": "20230107153129-353mf31",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-353mf31",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1 消息模型（Message Model）"
				}
			]
		},
		{
			"ID": "20230107153129-ujs54a4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-ujs54a4",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "RocketMQ主要由 Producer、Broker、Consumer 三部分组成，其中Producer 负责生产消息，Consumer 负责消费消息，Broker 负责存储消息。Broker 在实际部署过程中对应一台服务器，每个 Broker 可以存储多个Topic的消息，每个Topic的消息也可以分片存储于不同的 Broker。Message Queue 用于存储消息的物理地址，每个Topic中的消息地址存储于多个 Message Queue 中。ConsumerGroup 由多个Consumer 实例构成。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107153129-sertwtx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-sertwtx",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2 消息生产者（Producer）"
				}
			]
		},
		{
			"ID": "20230107153129-4klbpc3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-4klbpc3",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "** 负责生产消息，一般由业务系统负责生产消息。一个消息生产者会把业务应用系统里产生的消息发送到broker服务器。RocketMQ提供多种发送方式，同步发送、异步发送、顺序发送、单向发送。同步和异步方式均需要Broker返回确认信息，单向发送不需要。**"
				}
			]
		},
		{
			"ID": "20230107153129-d5d9dpy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-d5d9dpy",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3 消息消费者（Consumer）"
				}
			]
		},
		{
			"ID": "20230107153129-f87zt75",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-f87zt75",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "** 负责消费消息，一般是后台系统负责异步消费。一个消息消费者会从Broker服务器拉取消息、并将其提供给应用程序。从用户应用的角度而言提供了两种消费形式：拉取式消费、推动式消费。**"
				}
			]
		},
		{
			"ID": "20230107153129-v3yy830",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-v3yy830",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4 主题（Topic）"
				}
			]
		},
		{
			"ID": "20230107153129-ehzxroo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-ehzxroo",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**  表示一类消息的集合，每个主题包含若干条消息，每条消息只能属于一个主题，是RocketMQ进行消息订阅的基本单位。**"
				}
			]
		},
		{
			"ID": "20230107153129-298ti22",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-298ti22",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5 代理服务器（Broker Server）"
				}
			]
		},
		{
			"ID": "20230107153129-fso2ngk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-fso2ngk",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "消息中转角色，负责存储消息、转发消息。代理服务器在RocketMQ系统中负责接收从生产者发送来的消息并存储、同时为消费者的拉取请求作准备。代理服务器也存储消息相关的元数据，包括消费者组、消费进度偏移和主题和队列消息等。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107153129-x27w2zc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-x27w2zc",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6 名字服务（Name Server）"
				}
			]
		},
		{
			"ID": "20230107153129-n2p9hml",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-n2p9hml",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "** 名称服务充当路由消息的提供者。生产者或消费者能够通过名字服务查找各主题相应的Broker IP列表。多个Namesrv实例组成集群，但相互独立，没有信息交换。**"
				}
			]
		},
		{
			"ID": "20230107153129-hijycv9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-hijycv9",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7 拉取式消费（Pull Consumer）"
				}
			]
		},
		{
			"ID": "20230107153129-gvbgr0v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-gvbgr0v",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**  Consumer消费的一种类型，应用通常主动调用Consumer的拉消息方法从Broker服务器拉消息、主动权由应用控制。一旦获取了批量消息，应用就会启动消费过程。**"
				}
			]
		},
		{
			"ID": "20230107153129-3dyd1m8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-3dyd1m8",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8 推动式消费（Push Consumer）"
				}
			]
		},
		{
			"ID": "20230107153129-08shtw9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-08shtw9",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "** Consumer消费的一种类型，该模式下Broker收到数据后会主动推送给消费端，该消费模式一般实时性较高。**"
				}
			]
		},
		{
			"ID": "20230107153129-a59ixug",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-a59ixug",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "9 生产者组（Producer Group）"
				}
			]
		},
		{
			"ID": "20230107153129-9pi8p8o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-9pi8p8o",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**  同一类Producer的集合，这类Producer发送同一类消息且发送逻辑一致。如果发送的是事务消息且原始生产者在发送之后崩溃，则Broker服务器会联系同一生产者组的其他生产者实例以提交或回溯消费。**"
				}
			]
		},
		{
			"ID": "20230107153129-c8gldw7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-c8gldw7",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "10 消费者组（Consumer Group）"
				}
			]
		},
		{
			"ID": "20230107153129-1lbxqoj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-1lbxqoj",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**  同一类Consumer的集合，这类Consumer通常消费同一类消息且消费逻辑一致。消费者组使得在消息消费方面，实现负载均衡和容错的目标变得非常容易。要注意的是，消费者组的消费者实例必须订阅完全相同的Topic。RocketMQ 支持两种消息模式：集群消费（Clustering）和广播消费（Broadcasting）。**"
				}
			]
		},
		{
			"ID": "20230107153129-lpqpn51",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-lpqpn51",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "11 集群消费（Clustering）"
				}
			]
		},
		{
			"ID": "20230107153129-0ve7on0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-0ve7on0",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "集群消费模式下,相同Consumer Group的每个Consumer实例平均分摊消息。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107153129-lorox3j",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-lorox3j",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "12 广播消费（Broadcasting）"
				}
			]
		},
		{
			"ID": "20230107153129-e32sw4y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-e32sw4y",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "广播消费模式下，相同Consumer Group的每个Consumer实例都接收全量的消息。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107153129-rz2jo1p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-rz2jo1p",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "13 普通顺序消息（Normal Ordered Message）"
				}
			]
		},
		{
			"ID": "20230107153129-plsa7b8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-plsa7b8",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "普通顺序消费模式下，消费者通过同一个消息队列（ Topic 分区，称作 Message Queue） 收到的消息是有顺序的，不同消息队列收到的消息则可能是无顺序的。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107153129-tj877ds",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-tj877ds",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "14 严格顺序消息（Strictly Ordered Message）"
				}
			]
		},
		{
			"ID": "20230107153129-coqhan2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-coqhan2",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "严格顺序消息模式下，消费者收到的所有消息均是有顺序的。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107153129-4e53bfu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-4e53bfu",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "15 消息（Message）"
				}
			]
		},
		{
			"ID": "20230107153129-fgyihzp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-fgyihzp",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "消息系统所传输信息的物理载体，生产和消费数据的最小单位，每条消息必须属于一个主题。RocketMQ中每个消息拥有唯一的Message ID，且可以携带具有业务标识的Key。系统提供了通过Message ID和Key查询消息的功能。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107153129-3est8y0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107153129-3est8y0",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "16 标签（Tag）"
				}
			]
		},
		{
			"ID": "20230107153129-y5x2ber",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107153129-y5x2ber",
				"updated": "20230107153129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "** 为消息设置的标志，用于同一主题下区分不同类型的消息。来自同一业务单元的消息，可以根据不同业务目的在同一主题下设置不同标签。标签能够有效地保持代码的清晰度和连贯性，并优化RocketMQ提供的查询系统。消费者可以根据Tag实现对不同子主题的不同消费逻辑，实现更好的扩展性。**"
				}
			]
		},
		{
			"ID": "20230107155102-zd0it1m",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230107155102-zd0it1m",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "“Request-Reply”特性"
				}
			]
		},
		{
			"ID": "20230107155102-xt1q5ya",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230107155102-xt1q5ya",
				"updated": "20230107155102"
			}
		},
		{
			"ID": "20230107155102-rz2qywj",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107155102-rz2qywj",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1 使用场景"
				}
			]
		},
		{
			"ID": "20230107155102-dr1lfqp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-dr1lfqp",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "随着服务规模的扩大，单机服务无法满足性能和容量的要求，此时需要将服务拆分为更小粒度的服务或者部署多个服务实例构成集群来提供服务。在分布式场景下，RPC是最常用的联机调用的方式。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-3l5wm6q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-3l5wm6q",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "在构建分布式应用时，有些领域，例如金融服务领域，常常使用消息队列来构建服务总线，实现联机调用的目的。消息队列的主要场景是解耦、削峰填谷，在联机调用的场景下，需要将服务的调用抽象成基于消息的交互，并增强同步调用的这种交互逻辑。为了更好地支持消息队列在联机调用场景下的应用，rocketmq-4.6.0推出了“Request-Reply”特性来支持RPC调用。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-e2omvuo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107155102-e2omvuo",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2 设计思路"
				}
			]
		},
		{
			"ID": "20230107155102-9zp1mu4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-9zp1mu4",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "在rocketmq中，整个同步调用主要包括两个过程："
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-3ygx5va",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-3ygx5va",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "（1）请求方生成消息，发送给响应方，并等待响应方回包；"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-zd6dcr7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-zd6dcr7",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "（2）响应方收到请求消息后，消费这条消息，并发出一条响应消息给请求方。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-e4es1ph",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-e4es1ph",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "整个过程实质上是两个消息收发过程的组合。所以这里最关键的问题是如何将异步的消息收发过程构建成一个同步的过程。其中主要有两个问题需要解决："
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-t6a6fne",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230107155102-t6a6fne",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.1 请求方如何同步等待回包"
				}
			]
		},
		{
			"ID": "20230107155102-wxxww5o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-wxxww5o",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "这个问题的解决方案中，一个关键的数据结构是RequestResponseFuture。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-yd0ar1z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230107155102-yd0ar1z",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class RequestResponseFuture {\n    private final String correlationId;\n    private final RequestCallback requestCallback;\n    private final long beginTimestamp = System.currentTimeMillis();\n    private final Message requestMsg = null;\n    private long timeoutMillis;\n    private CountDownLatch countDownLatch = new CountDownLatch(1);\n    private volatile Message responseMsg = null;\n    private volatile boolean sendRequestOk = true;\n    private volatile Throwable cause = null;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230107155102-mjasxty",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-mjasxty",
				"updated": "20230107155144"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "RequestResponseFuture中，利用correlationId来标识一个请求。如下图所示，Producer发送request时创建一个RequestResponseFuture，以correlationId为key，RequestResponseFuture为value存入map，同时请求中带上RequestResponseFuture中的correlationId，收到回包后根据correlationId拿到对应的RequestResponseFuture，并设置回包内容。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/producer_send_request.png?lastModify=1673077849"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230107155102-7wynl2n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230107155102-7wynl2n",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2.2 consumer消费消息后，如何准确回包"
				}
			]
		},
		{
			"ID": "20230107155102-ey0f90l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-ey0f90l",
				"updated": "20230107155131"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "（1）producer在发送消息的时候，会给每条消息生成唯一的标识符，同时还带上了producer的clientId。当consumer收到并消费消息后，从消息中取出消息的标识符correlationId和producer的标识符clientId，放入响应消息，用来确定此响应消息是哪条请求消息的回包，以及此响应消息应该发给哪个producer。同时响应消息中设置了消息的类型以及响应消息的topic，然后consumer将消息发给broker，如下图所示。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/consumer_reply.png?lastModify=1673077849"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230107155102-va7b82z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-va7b82z",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "（2）broker收到响应消息后，需要将消息发回给指定的producer。Broker如何知道发回给哪个producer？因为消息中包含了producer的标识符clientId，在ProducerManager中，维护了标识符和channel信息的对应关系，通过这个对应关系，就能把回包发给对应的producer。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-3f1uaz6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-3f1uaz6",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "响应消息发送和一般的消息发送流程区别在于，响应消息不需要producer拉取，而是由broker直接推给producer。同时选择broker的策略也有变化：请求消息从哪个broker发过来，响应消息也发到对应的broker上。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-0iaj7qq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-0iaj7qq",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Producer收到响应消息后，根据消息中的唯一标识符，从RequestResponseFuture的map中找到对应的RequestResponseFuture结构，设置响应消息，同时计数器减一，解除等待状态，使请求方收到响应消息。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-kfwqibu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107155102-kfwqibu",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3 使用方法"
				}
			]
		},
		{
			"ID": "20230107155102-07oa6xr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-07oa6xr",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "同步调用的示例在example文件夹的rpc目录下。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-ontxfvr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230107155102-ontxfvr",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.1 Producer"
				}
			]
		},
		{
			"ID": "20230107155102-77mehuo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230107155102-77mehuo",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Message msg = new Message(topic,\n                \"\",\n                \"Hello world\".getBytes(RemotingHelper.DEFAULT_CHARSET));\n​\n            long begin = System.currentTimeMillis();\n            Message retMsg = producer.request(msg, ttl);\n            long cost = System.currentTimeMillis() - begin;\n            System.out.printf(\"request to \u003c%s\u003e cost: %d replyMessage: %s %n\", topic, cost, retMsg);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230107155102-4gcn133",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-4gcn133",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "调用接口替换为request即可。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-iw1j5q3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230107155102-iw1j5q3",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3.2 Consumer"
				}
			]
		},
		{
			"ID": "20230107155102-tvuea88",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-tvuea88",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "需要启动一个producer，同时在覆写consumeMessage方法的时候，自定义响应消息并发送。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-glbfze5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230107155102-glbfze5",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "            @Override\n            public ConsumeConcurrentlyStatus consumeMessage(List\u003cMessageExt\u003e msgs, ConsumeConcurrentlyContext context) {\n                System.out.printf(\"%s Receive New Messages: %s %n\", Thread.currentThread().getName(), msgs);\n                for (MessageExt msg : msgs) {\n                    try {\n                        System.out.printf(\"handle message: %s\", msg.toString());\n                        String replyTo = MessageUtil.getReplyToClient(msg);\n                        byte[] replyContent = \"reply message contents.\".getBytes();\n                        // create reply message with given util, do not create reply message by yourself\n                        Message replyMessage = MessageUtil.createReplyMessage(msg, replyContent);\n​\n                        // send reply message with producer\n                        SendResult replyResult = replyProducer.send(replyMessage, 3000);\n                        System.out.printf(\"reply to %s , %s %n\", replyTo, replyResult.toString());\n                    } catch (MQClientException | RemotingException | MQBrokerException | InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n            }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230107155102-jzjpg2y",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230107155102-jzjpg2y",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4 接口参数"
				}
			]
		},
		{
			"ID": "20230107155102-685rd06",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-685rd06",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4.1 public Message request(Message msg,long timeout)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-a45eulw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-a45eulw",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "msg：待发送的消息"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-k10oy2d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-k10oy2d",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "timeout：同步调用超时时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-yssksdt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-yssksdt",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4.2 public void request(Message msg, final RequestCallback requestCallback, long timeout)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-uwubohu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-uwubohu",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "msg：待发送的消息"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-o8ic64l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-o8ic64l",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "requestCallback：回调函数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-p546xnx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-p546xnx",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "timeout：同步调用超时时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-93cmukq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-93cmukq",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4.3 public Message request(final Message msg, final MessageQueueSelector selector, final Object arg,final long timeout)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-qengwli",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-qengwli",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "msg：待发送的消息"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-8eb7osw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-8eb7osw",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "selector：消息队列选择器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-7410dc9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-7410dc9",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "arg：消息队列选择器需要的参数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-iqdqrsa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-iqdqrsa",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "timeout：同步调用超时时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-m58k7vu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-m58k7vu",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4.4 public void request(final Message msg, final MessageQueueSelector selector, final Object arg,final RequestCallback requestCallback, final long timeout)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-jebuz1h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-jebuz1h",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "msg：待发送的消息"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-enukfoq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-enukfoq",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "selector：消息队列选择器"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-399f59g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-399f59g",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "arg：消息队列选择器需要的参数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-qfkq8i3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-qfkq8i3",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "requestCallback：回调函数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-v8a2xlz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-v8a2xlz",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "timeout：同步调用超时时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-8l86zqi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-8l86zqi",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4.5"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\t"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "public Message request(final Message msg, final MessageQueue mq, final long timeout)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-4cqdku8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-4cqdku8",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "msg：待发送的消息"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-rwba5n4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-rwba5n4",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "mq：目标消息队列"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-4s15uao",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-4s15uao",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "timeout：同步调用超时时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-q3c57tb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-q3c57tb",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4.6"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\t"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "public void request(final Message msg, final MessageQueue mq, final RequestCallback requestCallback, long timeout)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-bddj4kd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-bddj4kd",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "msg：待发送的消息"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-e0j90jp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-e0j90jp",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "mq：目标消息队列"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-fv0h9kx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-fv0h9kx",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "requestCallback：回调函数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20230107155102-8vza7nx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230107155102-8vza7nx",
				"updated": "20230107155102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "timeout：同步调用超时时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		}
	]
}