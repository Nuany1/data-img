{
	"ID": "20220915121359-md1t6a6",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220915121359-md1t6a6",
		"scroll": "{\u0026amp;quot;startId\u0026amp;quot;:\u0026amp;quot;20220915121359-11j5rhe\u0026amp;quot;,\u0026amp;quot;endId\u0026amp;quot;:\u0026amp;quot;20220915121359-11j5rhe\u0026amp;quot;,\u0026amp;quot;scrollTop\u0026amp;quot;:0}",
		"title": "Ribbon 源码解析",
		"updated": "20220915121849"
	},
	"Children": [
		{
			"ID": "20220915121843-8sjwfsy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220915121843-8sjwfsy",
				"updated": "20220915121849"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、Ribbon "
				}
			]
		},
		{
			"ID": "20220915121843-1odw2x2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220915121843-1odw2x2",
				"updated": "20220915121843"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "配置类：org.springframework.cloud.netflix.ribbon.RibbonAutoConfiguration"
				}
			]
		},
		{
			"ID": "20220915121843-lkmc643",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220915121843-lkmc643",
				"updated": "20220915121843"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在配置类中会初始化"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "RibbonLoadBalancerClient"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				}
			]
		},
		{
			"ID": "20220915121843-fn72uje",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220915121843-fn72uje",
				"updated": "20220915121843"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public \u003cT\u003e T execute(String serviceId, LoadBalancerRequest\u003cT\u003e request, Object hint) throws IOException {\n    ILoadBalancer loadBalancer = this.getLoadBalancer(serviceId);\n    Server server = this.getServer(loadBalancer, hint);\n    if (server == null) {\n       throw new IllegalStateException(\"No instances available for \" + serviceId);\n    } else {\n        RibbonServer ribbonServer = new RibbonServer(serviceId, server, this.isSecure(server, serviceId), this.serverIntrospector(serviceId).getMetadata(server));\n        return this.execute(serviceId, (ServiceInstance)ribbonServer, (LoadBalancerRequest)request);\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220915121843-91wsy3w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220915121843-91wsy3w",
				"updated": "20220915121843"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZoneAwareLoadBalancer的父类是"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "DynamicServerListLoadBalancer"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，DynamicServerListLoadBalancer构造函数中会调用"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "restOfInit()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "方法（其中会获取到所有的服务实例）"
				}
			]
		}
	]
}