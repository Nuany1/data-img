{
	"ID": "20220914143533-xjkwf2t",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220914143533-xjkwf2t",
		"title": "Nacos 注册",
		"updated": "20220914145448"
	},
	"Children": [
		{
			"ID": "20220914143533-1orch5b",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220914143533-1orch5b",
				"updated": "20220914145029"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、Spring-cloud 自动注册"
				}
			]
		},
		{
			"ID": "20220914143706-wfwao5s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220914143706-wfwao5s",
				"updated": "20220914143748"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\tnacos服务注册表结构：Map\u003cnamespace, Map\u003cgroup::serviceName, Service\u003e\u003e"
				}
			]
		},
		{
			"ID": "20220914143742-iuc9t20",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220914143742-iuc9t20",
				"updated": "20220914144540"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\tSpring-cloud中客户端向服务端发送注册：NacosServiceRegistryAutoConfiguration 配置类"
				}
			]
		},
		{
			"ID": "20220914144513-ee3p3kd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220914144513-ee3p3kd",
				"updated": "20220914144647"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "    public NacosAutoServiceRegistration(ServiceRegistry\u003cRegistration\u003e serviceRegistry, AutoServiceRegistrationProperties autoServiceRegistrationProperties, NacosRegistration registration) {\n        // 父类先初始化。\n\tsuper(serviceRegistry, autoServiceRegistrationProperties);\n        this.registration = registration;\n    }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220914144652-k3xudfk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220914144652-k3xudfk",
				"updated": "20220914144727"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们看到父类实现了 ApplicationListener 接口，而实现该接口必须重新其 onApplicationEvent() 方法，我们看到方法中又调用了 bind() 方法"
				}
			]
		},
		{
			"ID": "20220914144728-vkmbyvy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220914144728-vkmbyvy",
				"updated": "20220914145448"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public void bind(WebServerInitializedEvent event) {\n  ApplicationContext context = event.getApplicationContext();\n  if (!(context instanceof ConfigurableWebServerApplicationContext) || !\"management\".equals(((ConfigurableWebServerApplicationContext)context).getServerNamespace())) {\n        // cas 原子操作\n\tthis.port.compareAndSet(0, event.getWebServer().getPort());\n       this.start();\n   }\n}\n// \npublic void start() {\n   if (!isEnabled()) {\n      if (logger.isDebugEnabled()) {\n         logger.debug(\"Discovery Lifecycle disabled. Not starting\");\n      }\n      return;\n   }\n   if (!this.running.get()) {\n      this.context.publishEvent(new InstancePreRegisteredEvent(this, getRegistration()));\n      // 开始注册\n      register();\n      if (shouldRegisterManagement()) {\n         registerManagement();\n      }\n      this.context.publishEvent(new InstanceRegisteredEvent\u003c\u003e(this, getConfiguration()));\n      this.running.compareAndSet(false, true);\n   }\n\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}